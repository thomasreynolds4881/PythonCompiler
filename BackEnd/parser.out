Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list label_list
Rule 2     instruction_list -> instruction_list instruction
Rule 3     instruction_list -> <empty>
Rule 4     instruction -> label_list three_address_instruction
Rule 5     three_address_instruction -> lhs ASSIGN operand
Rule 6     three_address_instruction -> lhs ASSIGN operand PLUS operand
Rule 7     three_address_instruction -> lhs ASSIGN operand MINUS operand
Rule 8     three_address_instruction -> lhs ASSIGN operand TIMES operand
Rule 9     three_address_instruction -> lhs ASSIGN operand DIVIDE operand
Rule 10    three_address_instruction -> lhs ASSIGN MINUS operand
Rule 11    three_address_instruction -> lhs ASSIGN NOT operand
Rule 12    three_address_instruction -> lhs ASSIGN operand LESSTHAN operand
Rule 13    three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand
Rule 14    three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand
Rule 15    three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand
Rule 16    three_address_instruction -> lhs ASSIGN operand EQUALTO operand
Rule 17    three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand
Rule 18    three_address_instruction -> lhs ASSIGN operand AND operand
Rule 19    three_address_instruction -> lhs ASSIGN operand OR operand
Rule 20    three_address_instruction -> IFFALSE operand GOTO ID
Rule 21    three_address_instruction -> IFTRUE operand GOTO ID
Rule 22    three_address_instruction -> GOTO ID
Rule 23    three_address_instruction -> WRITE operand
Rule 24    three_address_instruction -> READ lhs
Rule 25    label_list -> label_list label
Rule 26    label_list -> <empty>
Rule 27    lhs -> ID
Rule 28    operand -> ID
Rule 29    operand -> NUM
Rule 30    label -> ID COLON

Terminals, with rules where they appear

AND                  : 18
ASSIGN               : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
COLON                : 30
DIVIDE               : 9
EQUALTO              : 16
GOTO                 : 20 21 22
GREATEREQUALTO       : 15
GREATERTHAN          : 13
ID                   : 20 21 22 27 28 30
IFFALSE              : 20
IFTRUE               : 21
LESSEQUALTO          : 14
LESSTHAN             : 12
MINUS                : 7 10
NOT                  : 11
NOTEQUALTO           : 17
NUM                  : 29
OR                   : 19
PLUS                 : 6
READ                 : 24
TIMES                : 8
WRITE                : 23
error                : 

Nonterminals, with rules where they appear

instruction          : 2
instruction_list     : 1 2
label                : 25
label_list           : 1 4 25
lhs                  : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 24
operand              : 5 6 6 7 7 8 8 9 9 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 21 23
program              : 0
three_address_instruction : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list label_list
    (2) instruction_list -> . instruction_list instruction
    (3) instruction_list -> .

    ID              reduce using rule 3 (instruction_list -> .)
    IFFALSE         reduce using rule 3 (instruction_list -> .)
    IFTRUE          reduce using rule 3 (instruction_list -> .)
    GOTO            reduce using rule 3 (instruction_list -> .)
    WRITE           reduce using rule 3 (instruction_list -> .)
    READ            reduce using rule 3 (instruction_list -> .)
    $end            reduce using rule 3 (instruction_list -> .)

    program                        shift and go to state 1
    instruction_list               shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list . label_list
    (2) instruction_list -> instruction_list . instruction
    (25) label_list -> . label_list label
    (26) label_list -> .
    (4) instruction -> . label_list three_address_instruction

    ID              reduce using rule 26 (label_list -> .)
    IFFALSE         reduce using rule 26 (label_list -> .)
    IFTRUE          reduce using rule 26 (label_list -> .)
    GOTO            reduce using rule 26 (label_list -> .)
    WRITE           reduce using rule 26 (label_list -> .)
    READ            reduce using rule 26 (label_list -> .)
    $end            reduce using rule 26 (label_list -> .)

    label_list                     shift and go to state 3
    instruction                    shift and go to state 4

state 3

    (1) program -> instruction_list label_list .
    (25) label_list -> label_list . label
    (4) instruction -> label_list . three_address_instruction
    (30) label -> . ID COLON
    (5) three_address_instruction -> . lhs ASSIGN operand
    (6) three_address_instruction -> . lhs ASSIGN operand PLUS operand
    (7) three_address_instruction -> . lhs ASSIGN operand MINUS operand
    (8) three_address_instruction -> . lhs ASSIGN operand TIMES operand
    (9) three_address_instruction -> . lhs ASSIGN operand DIVIDE operand
    (10) three_address_instruction -> . lhs ASSIGN MINUS operand
    (11) three_address_instruction -> . lhs ASSIGN NOT operand
    (12) three_address_instruction -> . lhs ASSIGN operand LESSTHAN operand
    (13) three_address_instruction -> . lhs ASSIGN operand GREATERTHAN operand
    (14) three_address_instruction -> . lhs ASSIGN operand LESSEQUALTO operand
    (15) three_address_instruction -> . lhs ASSIGN operand GREATEREQUALTO operand
    (16) three_address_instruction -> . lhs ASSIGN operand EQUALTO operand
    (17) three_address_instruction -> . lhs ASSIGN operand NOTEQUALTO operand
    (18) three_address_instruction -> . lhs ASSIGN operand AND operand
    (19) three_address_instruction -> . lhs ASSIGN operand OR operand
    (20) three_address_instruction -> . IFFALSE operand GOTO ID
    (21) three_address_instruction -> . IFTRUE operand GOTO ID
    (22) three_address_instruction -> . GOTO ID
    (23) three_address_instruction -> . WRITE operand
    (24) three_address_instruction -> . READ lhs
    (27) lhs -> . ID

    $end            reduce using rule 1 (program -> instruction_list label_list .)
    ID              shift and go to state 7
    IFFALSE         shift and go to state 9
    IFTRUE          shift and go to state 11
    GOTO            shift and go to state 10
    WRITE           shift and go to state 12
    READ            shift and go to state 13

    label                          shift and go to state 5
    three_address_instruction      shift and go to state 6
    lhs                            shift and go to state 8

state 4

    (2) instruction_list -> instruction_list instruction .

    ID              reduce using rule 2 (instruction_list -> instruction_list instruction .)
    IFFALSE         reduce using rule 2 (instruction_list -> instruction_list instruction .)
    IFTRUE          reduce using rule 2 (instruction_list -> instruction_list instruction .)
    GOTO            reduce using rule 2 (instruction_list -> instruction_list instruction .)
    WRITE           reduce using rule 2 (instruction_list -> instruction_list instruction .)
    READ            reduce using rule 2 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 2 (instruction_list -> instruction_list instruction .)


state 5

    (25) label_list -> label_list label .

    ID              reduce using rule 25 (label_list -> label_list label .)
    IFFALSE         reduce using rule 25 (label_list -> label_list label .)
    IFTRUE          reduce using rule 25 (label_list -> label_list label .)
    GOTO            reduce using rule 25 (label_list -> label_list label .)
    WRITE           reduce using rule 25 (label_list -> label_list label .)
    READ            reduce using rule 25 (label_list -> label_list label .)
    $end            reduce using rule 25 (label_list -> label_list label .)


state 6

    (4) instruction -> label_list three_address_instruction .

    ID              reduce using rule 4 (instruction -> label_list three_address_instruction .)
    IFFALSE         reduce using rule 4 (instruction -> label_list three_address_instruction .)
    IFTRUE          reduce using rule 4 (instruction -> label_list three_address_instruction .)
    GOTO            reduce using rule 4 (instruction -> label_list three_address_instruction .)
    WRITE           reduce using rule 4 (instruction -> label_list three_address_instruction .)
    READ            reduce using rule 4 (instruction -> label_list three_address_instruction .)
    $end            reduce using rule 4 (instruction -> label_list three_address_instruction .)


state 7

    (30) label -> ID . COLON
    (27) lhs -> ID .

    COLON           shift and go to state 14
    ASSIGN          reduce using rule 27 (lhs -> ID .)


state 8

    (5) three_address_instruction -> lhs . ASSIGN operand
    (6) three_address_instruction -> lhs . ASSIGN operand PLUS operand
    (7) three_address_instruction -> lhs . ASSIGN operand MINUS operand
    (8) three_address_instruction -> lhs . ASSIGN operand TIMES operand
    (9) three_address_instruction -> lhs . ASSIGN operand DIVIDE operand
    (10) three_address_instruction -> lhs . ASSIGN MINUS operand
    (11) three_address_instruction -> lhs . ASSIGN NOT operand
    (12) three_address_instruction -> lhs . ASSIGN operand LESSTHAN operand
    (13) three_address_instruction -> lhs . ASSIGN operand GREATERTHAN operand
    (14) three_address_instruction -> lhs . ASSIGN operand LESSEQUALTO operand
    (15) three_address_instruction -> lhs . ASSIGN operand GREATEREQUALTO operand
    (16) three_address_instruction -> lhs . ASSIGN operand EQUALTO operand
    (17) three_address_instruction -> lhs . ASSIGN operand NOTEQUALTO operand
    (18) three_address_instruction -> lhs . ASSIGN operand AND operand
    (19) three_address_instruction -> lhs . ASSIGN operand OR operand

    ASSIGN          shift and go to state 15


state 9

    (20) three_address_instruction -> IFFALSE . operand GOTO ID
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 16

state 10

    (22) three_address_instruction -> GOTO . ID

    ID              shift and go to state 19


state 11

    (21) three_address_instruction -> IFTRUE . operand GOTO ID
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 20

state 12

    (23) three_address_instruction -> WRITE . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 21

state 13

    (24) three_address_instruction -> READ . lhs
    (27) lhs -> . ID

    ID              shift and go to state 23

    lhs                            shift and go to state 22

state 14

    (30) label -> ID COLON .

    ID              reduce using rule 30 (label -> ID COLON .)
    IFFALSE         reduce using rule 30 (label -> ID COLON .)
    IFTRUE          reduce using rule 30 (label -> ID COLON .)
    GOTO            reduce using rule 30 (label -> ID COLON .)
    WRITE           reduce using rule 30 (label -> ID COLON .)
    READ            reduce using rule 30 (label -> ID COLON .)
    $end            reduce using rule 30 (label -> ID COLON .)


state 15

    (5) three_address_instruction -> lhs ASSIGN . operand
    (6) three_address_instruction -> lhs ASSIGN . operand PLUS operand
    (7) three_address_instruction -> lhs ASSIGN . operand MINUS operand
    (8) three_address_instruction -> lhs ASSIGN . operand TIMES operand
    (9) three_address_instruction -> lhs ASSIGN . operand DIVIDE operand
    (10) three_address_instruction -> lhs ASSIGN . MINUS operand
    (11) three_address_instruction -> lhs ASSIGN . NOT operand
    (12) three_address_instruction -> lhs ASSIGN . operand LESSTHAN operand
    (13) three_address_instruction -> lhs ASSIGN . operand GREATERTHAN operand
    (14) three_address_instruction -> lhs ASSIGN . operand LESSEQUALTO operand
    (15) three_address_instruction -> lhs ASSIGN . operand GREATEREQUALTO operand
    (16) three_address_instruction -> lhs ASSIGN . operand EQUALTO operand
    (17) three_address_instruction -> lhs ASSIGN . operand NOTEQUALTO operand
    (18) three_address_instruction -> lhs ASSIGN . operand AND operand
    (19) three_address_instruction -> lhs ASSIGN . operand OR operand
    (28) operand -> . ID
    (29) operand -> . NUM

    MINUS           shift and go to state 25
    NOT             shift and go to state 26
    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 24

state 16

    (20) three_address_instruction -> IFFALSE operand . GOTO ID

    GOTO            shift and go to state 27


state 17

    (28) operand -> ID .

    GOTO            reduce using rule 28 (operand -> ID .)
    ID              reduce using rule 28 (operand -> ID .)
    IFFALSE         reduce using rule 28 (operand -> ID .)
    IFTRUE          reduce using rule 28 (operand -> ID .)
    WRITE           reduce using rule 28 (operand -> ID .)
    READ            reduce using rule 28 (operand -> ID .)
    $end            reduce using rule 28 (operand -> ID .)
    PLUS            reduce using rule 28 (operand -> ID .)
    MINUS           reduce using rule 28 (operand -> ID .)
    TIMES           reduce using rule 28 (operand -> ID .)
    DIVIDE          reduce using rule 28 (operand -> ID .)
    LESSTHAN        reduce using rule 28 (operand -> ID .)
    GREATERTHAN     reduce using rule 28 (operand -> ID .)
    LESSEQUALTO     reduce using rule 28 (operand -> ID .)
    GREATEREQUALTO  reduce using rule 28 (operand -> ID .)
    EQUALTO         reduce using rule 28 (operand -> ID .)
    NOTEQUALTO      reduce using rule 28 (operand -> ID .)
    AND             reduce using rule 28 (operand -> ID .)
    OR              reduce using rule 28 (operand -> ID .)


state 18

    (29) operand -> NUM .

    GOTO            reduce using rule 29 (operand -> NUM .)
    ID              reduce using rule 29 (operand -> NUM .)
    IFFALSE         reduce using rule 29 (operand -> NUM .)
    IFTRUE          reduce using rule 29 (operand -> NUM .)
    WRITE           reduce using rule 29 (operand -> NUM .)
    READ            reduce using rule 29 (operand -> NUM .)
    $end            reduce using rule 29 (operand -> NUM .)
    PLUS            reduce using rule 29 (operand -> NUM .)
    MINUS           reduce using rule 29 (operand -> NUM .)
    TIMES           reduce using rule 29 (operand -> NUM .)
    DIVIDE          reduce using rule 29 (operand -> NUM .)
    LESSTHAN        reduce using rule 29 (operand -> NUM .)
    GREATERTHAN     reduce using rule 29 (operand -> NUM .)
    LESSEQUALTO     reduce using rule 29 (operand -> NUM .)
    GREATEREQUALTO  reduce using rule 29 (operand -> NUM .)
    EQUALTO         reduce using rule 29 (operand -> NUM .)
    NOTEQUALTO      reduce using rule 29 (operand -> NUM .)
    AND             reduce using rule 29 (operand -> NUM .)
    OR              reduce using rule 29 (operand -> NUM .)


state 19

    (22) three_address_instruction -> GOTO ID .

    ID              reduce using rule 22 (three_address_instruction -> GOTO ID .)
    IFFALSE         reduce using rule 22 (three_address_instruction -> GOTO ID .)
    IFTRUE          reduce using rule 22 (three_address_instruction -> GOTO ID .)
    GOTO            reduce using rule 22 (three_address_instruction -> GOTO ID .)
    WRITE           reduce using rule 22 (three_address_instruction -> GOTO ID .)
    READ            reduce using rule 22 (three_address_instruction -> GOTO ID .)
    $end            reduce using rule 22 (three_address_instruction -> GOTO ID .)


state 20

    (21) three_address_instruction -> IFTRUE operand . GOTO ID

    GOTO            shift and go to state 28


state 21

    (23) three_address_instruction -> WRITE operand .

    ID              reduce using rule 23 (three_address_instruction -> WRITE operand .)
    IFFALSE         reduce using rule 23 (three_address_instruction -> WRITE operand .)
    IFTRUE          reduce using rule 23 (three_address_instruction -> WRITE operand .)
    GOTO            reduce using rule 23 (three_address_instruction -> WRITE operand .)
    WRITE           reduce using rule 23 (three_address_instruction -> WRITE operand .)
    READ            reduce using rule 23 (three_address_instruction -> WRITE operand .)
    $end            reduce using rule 23 (three_address_instruction -> WRITE operand .)


state 22

    (24) three_address_instruction -> READ lhs .

    ID              reduce using rule 24 (three_address_instruction -> READ lhs .)
    IFFALSE         reduce using rule 24 (three_address_instruction -> READ lhs .)
    IFTRUE          reduce using rule 24 (three_address_instruction -> READ lhs .)
    GOTO            reduce using rule 24 (three_address_instruction -> READ lhs .)
    WRITE           reduce using rule 24 (three_address_instruction -> READ lhs .)
    READ            reduce using rule 24 (three_address_instruction -> READ lhs .)
    $end            reduce using rule 24 (three_address_instruction -> READ lhs .)


state 23

    (27) lhs -> ID .

    ID              reduce using rule 27 (lhs -> ID .)
    IFFALSE         reduce using rule 27 (lhs -> ID .)
    IFTRUE          reduce using rule 27 (lhs -> ID .)
    GOTO            reduce using rule 27 (lhs -> ID .)
    WRITE           reduce using rule 27 (lhs -> ID .)
    READ            reduce using rule 27 (lhs -> ID .)
    $end            reduce using rule 27 (lhs -> ID .)


state 24

    (5) three_address_instruction -> lhs ASSIGN operand .
    (6) three_address_instruction -> lhs ASSIGN operand . PLUS operand
    (7) three_address_instruction -> lhs ASSIGN operand . MINUS operand
    (8) three_address_instruction -> lhs ASSIGN operand . TIMES operand
    (9) three_address_instruction -> lhs ASSIGN operand . DIVIDE operand
    (12) three_address_instruction -> lhs ASSIGN operand . LESSTHAN operand
    (13) three_address_instruction -> lhs ASSIGN operand . GREATERTHAN operand
    (14) three_address_instruction -> lhs ASSIGN operand . LESSEQUALTO operand
    (15) three_address_instruction -> lhs ASSIGN operand . GREATEREQUALTO operand
    (16) three_address_instruction -> lhs ASSIGN operand . EQUALTO operand
    (17) three_address_instruction -> lhs ASSIGN operand . NOTEQUALTO operand
    (18) three_address_instruction -> lhs ASSIGN operand . AND operand
    (19) three_address_instruction -> lhs ASSIGN operand . OR operand

    ID              reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    IFFALSE         reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    IFTRUE          reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    GOTO            reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    WRITE           reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    READ            reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    $end            reduce using rule 5 (three_address_instruction -> lhs ASSIGN operand .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATERTHAN     shift and go to state 34
    LESSEQUALTO     shift and go to state 35
    GREATEREQUALTO  shift and go to state 36
    EQUALTO         shift and go to state 37
    NOTEQUALTO      shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40


state 25

    (10) three_address_instruction -> lhs ASSIGN MINUS . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 41

state 26

    (11) three_address_instruction -> lhs ASSIGN NOT . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 42

state 27

    (20) three_address_instruction -> IFFALSE operand GOTO . ID

    ID              shift and go to state 43


state 28

    (21) three_address_instruction -> IFTRUE operand GOTO . ID

    ID              shift and go to state 44


state 29

    (6) three_address_instruction -> lhs ASSIGN operand PLUS . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 45

state 30

    (7) three_address_instruction -> lhs ASSIGN operand MINUS . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 46

state 31

    (8) three_address_instruction -> lhs ASSIGN operand TIMES . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 47

state 32

    (9) three_address_instruction -> lhs ASSIGN operand DIVIDE . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 48

state 33

    (12) three_address_instruction -> lhs ASSIGN operand LESSTHAN . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 49

state 34

    (13) three_address_instruction -> lhs ASSIGN operand GREATERTHAN . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 50

state 35

    (14) three_address_instruction -> lhs ASSIGN operand LESSEQUALTO . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 51

state 36

    (15) three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 52

state 37

    (16) three_address_instruction -> lhs ASSIGN operand EQUALTO . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 53

state 38

    (17) three_address_instruction -> lhs ASSIGN operand NOTEQUALTO . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 54

state 39

    (18) three_address_instruction -> lhs ASSIGN operand AND . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 55

state 40

    (19) three_address_instruction -> lhs ASSIGN operand OR . operand
    (28) operand -> . ID
    (29) operand -> . NUM

    ID              shift and go to state 17
    NUM             shift and go to state 18

    operand                        shift and go to state 56

state 41

    (10) three_address_instruction -> lhs ASSIGN MINUS operand .

    ID              reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)
    IFFALSE         reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)
    IFTRUE          reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)
    GOTO            reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)
    WRITE           reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)
    READ            reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)
    $end            reduce using rule 10 (three_address_instruction -> lhs ASSIGN MINUS operand .)


state 42

    (11) three_address_instruction -> lhs ASSIGN NOT operand .

    ID              reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)
    IFFALSE         reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)
    IFTRUE          reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)
    GOTO            reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)
    WRITE           reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)
    READ            reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)
    $end            reduce using rule 11 (three_address_instruction -> lhs ASSIGN NOT operand .)


state 43

    (20) three_address_instruction -> IFFALSE operand GOTO ID .

    ID              reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)
    IFFALSE         reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)
    IFTRUE          reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)
    GOTO            reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)
    WRITE           reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)
    READ            reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)
    $end            reduce using rule 20 (three_address_instruction -> IFFALSE operand GOTO ID .)


state 44

    (21) three_address_instruction -> IFTRUE operand GOTO ID .

    ID              reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)
    IFFALSE         reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)
    IFTRUE          reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)
    GOTO            reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)
    WRITE           reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)
    READ            reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)
    $end            reduce using rule 21 (three_address_instruction -> IFTRUE operand GOTO ID .)


state 45

    (6) three_address_instruction -> lhs ASSIGN operand PLUS operand .

    ID              reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)
    IFFALSE         reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)
    IFTRUE          reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)
    GOTO            reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)
    WRITE           reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)
    READ            reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)
    $end            reduce using rule 6 (three_address_instruction -> lhs ASSIGN operand PLUS operand .)


state 46

    (7) three_address_instruction -> lhs ASSIGN operand MINUS operand .

    ID              reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)
    IFFALSE         reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)
    IFTRUE          reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)
    GOTO            reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)
    WRITE           reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)
    READ            reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)
    $end            reduce using rule 7 (three_address_instruction -> lhs ASSIGN operand MINUS operand .)


state 47

    (8) three_address_instruction -> lhs ASSIGN operand TIMES operand .

    ID              reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)
    IFFALSE         reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)
    IFTRUE          reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)
    GOTO            reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)
    WRITE           reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)
    READ            reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)
    $end            reduce using rule 8 (three_address_instruction -> lhs ASSIGN operand TIMES operand .)


state 48

    (9) three_address_instruction -> lhs ASSIGN operand DIVIDE operand .

    ID              reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)
    IFFALSE         reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)
    IFTRUE          reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)
    GOTO            reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)
    WRITE           reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)
    READ            reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)
    $end            reduce using rule 9 (three_address_instruction -> lhs ASSIGN operand DIVIDE operand .)


state 49

    (12) three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .

    ID              reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)
    IFFALSE         reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)
    IFTRUE          reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)
    GOTO            reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)
    WRITE           reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)
    READ            reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)
    $end            reduce using rule 12 (three_address_instruction -> lhs ASSIGN operand LESSTHAN operand .)


state 50

    (13) three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .

    ID              reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)
    IFFALSE         reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)
    IFTRUE          reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)
    GOTO            reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)
    WRITE           reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)
    READ            reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)
    $end            reduce using rule 13 (three_address_instruction -> lhs ASSIGN operand GREATERTHAN operand .)


state 51

    (14) three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .

    ID              reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)
    IFFALSE         reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)
    IFTRUE          reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)
    GOTO            reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)
    WRITE           reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)
    READ            reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)
    $end            reduce using rule 14 (three_address_instruction -> lhs ASSIGN operand LESSEQUALTO operand .)


state 52

    (15) three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .

    ID              reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)
    IFFALSE         reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)
    IFTRUE          reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)
    GOTO            reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)
    WRITE           reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)
    READ            reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)
    $end            reduce using rule 15 (three_address_instruction -> lhs ASSIGN operand GREATEREQUALTO operand .)


state 53

    (16) three_address_instruction -> lhs ASSIGN operand EQUALTO operand .

    ID              reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)
    IFFALSE         reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)
    IFTRUE          reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)
    GOTO            reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)
    WRITE           reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)
    READ            reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)
    $end            reduce using rule 16 (three_address_instruction -> lhs ASSIGN operand EQUALTO operand .)


state 54

    (17) three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .

    ID              reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)
    IFFALSE         reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)
    IFTRUE          reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)
    GOTO            reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)
    WRITE           reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)
    READ            reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)
    $end            reduce using rule 17 (three_address_instruction -> lhs ASSIGN operand NOTEQUALTO operand .)


state 55

    (18) three_address_instruction -> lhs ASSIGN operand AND operand .

    ID              reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)
    IFFALSE         reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)
    IFTRUE          reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)
    GOTO            reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)
    WRITE           reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)
    READ            reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)
    $end            reduce using rule 18 (three_address_instruction -> lhs ASSIGN operand AND operand .)


state 56

    (19) three_address_instruction -> lhs ASSIGN operand OR operand .

    ID              reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)
    IFFALSE         reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)
    IFTRUE          reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)
    GOTO            reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)
    WRITE           reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)
    READ            reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)
    $end            reduce using rule 19 (three_address_instruction -> lhs ASSIGN operand OR operand .)

